//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.schema.DatasetsServedByServiceQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object DatasetsServedByServiceQuery_ResponseAdapter {
  public object Data : Adapter<DatasetsServedByServiceQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("dataService")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        DatasetsServedByServiceQuery.Data {
      var _dataService: DatasetsServedByServiceQuery.DataService? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _dataService = DataService.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return DatasetsServedByServiceQuery.Data(
        dataService = _dataService
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: DatasetsServedByServiceQuery.Data,
    ): Unit {
      writer.name("dataService")
      DataService.obj().nullable().toJson(writer, customScalarAdapters, value.dataService)
    }
  }

  public object DataService : Adapter<DatasetsServedByServiceQuery.DataService> {
    public val RESPONSE_NAMES: List<String> = listOf("servesDataset")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        DatasetsServedByServiceQuery.DataService {
      var _servesDataset: List<DatasetsServedByServiceQuery.ServesDataset>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _servesDataset = ServesDataset.obj().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return DatasetsServedByServiceQuery.DataService(
        servesDataset = _servesDataset
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: DatasetsServedByServiceQuery.DataService,
    ): Unit {
      writer.name("servesDataset")
      ServesDataset.obj().list().nullable().toJson(writer, customScalarAdapters,
          value.servesDataset)
    }
  }

  public object ServesDataset : Adapter<DatasetsServedByServiceQuery.ServesDataset> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename", "id", "identifier")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        DatasetsServedByServiceQuery.ServesDataset {
      var __typename: String? = null
      var _id: String? = null
      var _identifier: List<String>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _identifier = StringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return DatasetsServedByServiceQuery.ServesDataset(
        __typename = __typename!!,
        id = _id!!,
        identifier = _identifier
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: DatasetsServedByServiceQuery.ServesDataset,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("identifier")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.identifier)
    }
  }
}
