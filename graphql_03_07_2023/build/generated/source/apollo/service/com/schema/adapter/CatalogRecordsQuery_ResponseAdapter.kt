//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.schema.CatalogRecordsQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CatalogRecordsQuery_ResponseAdapter {
  public object Data : Adapter<CatalogRecordsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("catalogRecordsByFilters")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CatalogRecordsQuery.Data {
      var _catalogRecordsByFilters: List<CatalogRecordsQuery.CatalogRecordsByFilter?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _catalogRecordsByFilters = CatalogRecordsByFilter.obj().nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return CatalogRecordsQuery.Data(
        catalogRecordsByFilters = _catalogRecordsByFilters
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CatalogRecordsQuery.Data,
    ): Unit {
      writer.name("catalogRecordsByFilters")
      CatalogRecordsByFilter.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
          value.catalogRecordsByFilters)
    }
  }

  public object CatalogRecordsByFilter : Adapter<CatalogRecordsQuery.CatalogRecordsByFilter> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "title", "contentType", "hints",
        "primaryTopic")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CatalogRecordsQuery.CatalogRecordsByFilter {
      var _id: String? = null
      var _title: String? = null
      var _contentType: String? = null
      var _hints: List<String>? = null
      var _primaryTopic: CatalogRecordsQuery.PrimaryTopic? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _contentType = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _hints = StringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          4 -> _primaryTopic = PrimaryTopic.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CatalogRecordsQuery.CatalogRecordsByFilter(
        id = _id!!,
        title = _title,
        contentType = _contentType,
        hints = _hints,
        primaryTopic = _primaryTopic!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CatalogRecordsQuery.CatalogRecordsByFilter,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("title")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("contentType")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.contentType)

      writer.name("hints")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.hints)

      writer.name("primaryTopic")
      PrimaryTopic.obj().toJson(writer, customScalarAdapters, value.primaryTopic)
    }
  }

  public object PrimaryTopic : Adapter<CatalogRecordsQuery.PrimaryTopic> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "identifier")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CatalogRecordsQuery.PrimaryTopic {
      var _id: String? = null
      var _identifier: List<String>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _identifier = StringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CatalogRecordsQuery.PrimaryTopic(
        id = _id!!,
        identifier = _identifier
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CatalogRecordsQuery.PrimaryTopic,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("identifier")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.identifier)
    }
  }
}
