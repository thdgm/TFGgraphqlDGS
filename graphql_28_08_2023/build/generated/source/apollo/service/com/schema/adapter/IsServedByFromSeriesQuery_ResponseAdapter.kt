//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.schema.IsServedByFromSeriesQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IsServedByFromSeriesQuery_ResponseAdapter {
  public object Data : Adapter<IsServedByFromSeriesQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("datasetSeries")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IsServedByFromSeriesQuery.Data {
      var _datasetSeries: IsServedByFromSeriesQuery.DatasetSeries? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _datasetSeries = DatasetSeries.obj().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return IsServedByFromSeriesQuery.Data(
        datasetSeries = _datasetSeries
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IsServedByFromSeriesQuery.Data,
    ): Unit {
      writer.name("datasetSeries")
      DatasetSeries.obj().nullable().toJson(writer, customScalarAdapters, value.datasetSeries)
    }
  }

  public object DatasetSeries : Adapter<IsServedByFromSeriesQuery.DatasetSeries> {
    public val RESPONSE_NAMES: List<String> = listOf("isServedBy")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IsServedByFromSeriesQuery.DatasetSeries {
      var _isServedBy: List<IsServedByFromSeriesQuery.IsServedBy>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isServedBy = IsServedBy.obj().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return IsServedByFromSeriesQuery.DatasetSeries(
        isServedBy = _isServedBy
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IsServedByFromSeriesQuery.DatasetSeries,
    ): Unit {
      writer.name("isServedBy")
      IsServedBy.obj().list().nullable().toJson(writer, customScalarAdapters, value.isServedBy)
    }
  }

  public object IsServedBy : Adapter<IsServedByFromSeriesQuery.IsServedBy> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "identifier")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IsServedByFromSeriesQuery.IsServedBy {
      var _id: String? = null
      var _identifier: List<String>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _identifier = StringAdapter.list().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return IsServedByFromSeriesQuery.IsServedBy(
        id = _id!!,
        identifier = _identifier
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IsServedByFromSeriesQuery.IsServedBy,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("identifier")
      StringAdapter.list().nullable().toJson(writer, customScalarAdapters, value.identifier)
    }
  }
}
