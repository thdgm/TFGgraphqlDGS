//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.schema.adapter.DistributionsQuery_ResponseAdapter
import com.schema.adapter.DistributionsQuery_VariablesAdapter
import com.schema.selections.DistributionsQuerySelections
import com.schema.type.MapInput
import commonModels.LangStringAdapterScalar
import commonModels.MediaTypeAdapterScalar
import kotlin.Any
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class DistributionsQuery(
  public val filter: Optional<List<MapInput>?> = Optional.Absent,
  public val page: Int,
) : Query<DistributionsQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    DistributionsQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = DistributionsQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.schema.type.Query.type
  )
  .selections(selections = DistributionsQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(DistributionsQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val distributionsByFilters: List<DistributionsByFilter?>?,
  ) : Query.Data {
    public fun distributionsByFiltersFilterNotNull(): List<DistributionsByFilter>? =
        distributionsByFilters?.filterNotNull()
  }

  public data class DistributionsByFilter(
    public val id: String,
    public val title: List<LangStringAdapterScalar>?,
    public val accessUrl: String?,
    public val format: MediaTypeAdapterScalar?,
    public val byteSize: Any?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "9a6551f7ab8356ab0af25bb77332256533cffed1a086c36b5f860ba3ef02a60f"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query Distributions($filter: \[MapInput!\], $page: Int!) {
     *   distributionsByFilters(filters: $filter, page: $page) {
     *     id
     *     title
     *     accessUrl
     *     format
     *     byteSize
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query Distributions(${'$'}filter: [MapInput!], ${'$'}page: Int!) { distributionsByFilters(filters: ${'$'}filter, page: ${'$'}page) { id title accessUrl format byteSize } }"

    public const val OPERATION_NAME: String = "Distributions"
  }
}
