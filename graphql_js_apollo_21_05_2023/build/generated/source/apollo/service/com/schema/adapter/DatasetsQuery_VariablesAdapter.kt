//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.IntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.present
import com.schema.DatasetsQuery
import kotlin.IllegalStateException
import kotlin.Unit

public object DatasetsQuery_VariablesAdapter : Adapter<DatasetsQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      DatasetsQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: DatasetsQuery,
  ): Unit {
    if (value.filter is Optional.Present) {
      writer.name("filter")
      NullableStringAdapter.present().toJson(writer, customScalarAdapters, value.filter)
    }
    if (value.`value` is Optional.Present) {
      writer.name("value")
      StringAdapter.list().nullable().present().toJson(writer, customScalarAdapters, value.`value`)
    }
    writer.name("page")
    IntAdapter.toJson(writer, customScalarAdapters, value.page)
  }
}
