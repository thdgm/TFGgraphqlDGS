//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.4'.
//
package com.schema.selections

import com.apollographql.apollo3.api.CompiledArgument
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CompiledSelection
import com.apollographql.apollo3.api.CompiledVariable
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.notNull
import com.schema.type.Catalog
import com.schema.type.CatalogRecord
import com.schema.type.GraphQLID
import com.schema.type.GraphQLString
import com.schema.type.ResourceInCatalog
import kotlin.collections.List

public object CatalogRecordInfoQuerySelections {
  private val __inCatalog: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "identifier",
          type = GraphQLString.type.notNull().list()
        ).build()
      )

  private val __primaryTopic: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "__typename",
          type = GraphQLString.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "identifier",
          type = GraphQLString.type.notNull().list()
        ).build()
      )

  private val __catalogRecord: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "id",
          type = GraphQLID.type.notNull()
        ).build(),
        CompiledField.Builder(
          name = "title",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "content",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "contentType",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "contentURL",
          type = GraphQLString.type
        ).build(),
        CompiledField.Builder(
          name = "hints",
          type = GraphQLString.type.notNull().list()
        ).build(),
        CompiledField.Builder(
          name = "inCatalog",
          type = Catalog.type.notNull().list()
        ).selections(__inCatalog)
        .build(),
        CompiledField.Builder(
          name = "primaryTopic",
          type = ResourceInCatalog.type.notNull()
        ).selections(__primaryTopic)
        .build()
      )

  public val __root: List<CompiledSelection> = listOf(
        CompiledField.Builder(
          name = "catalogRecord",
          type = CatalogRecord.type
        ).arguments(listOf(
          CompiledArgument.Builder("id", CompiledVariable("id")).build()
        ))
        .selections(__catalogRecord)
        .build()
      )
}
